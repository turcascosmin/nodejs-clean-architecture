openapi: 3.0.0
info:
  title: Clean Architecture API
  version: 1.0.0
  description: API for managing cars using Clean Architecture principles
servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /api/cars:
    get:
      summary: Get all cars
      description: Retrieve a list of all cars in the system.
      responses:
        '200':
          description: A list of cars.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
    post:
      summary: Create a new car
      description: Add a new car to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCarDto'
      responses:
        '201':
          description: Car created successfully.
        '400':
          description: Invalid input, object invalid.

  /api/cars/{id}:
    get:
      summary: Get car by ID
      description: Retrieve a single car by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The car ID.
      responses:
        '200':
          description: Car details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '404':
          description: Car not found.
    put:
      summary: Update car by ID
      description: Update the details of a car by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The car ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCarDto'
      responses:
        '200':
          description: Car updated successfully.
        '400':
          description: Invalid input, object invalid.
        '404':
          description: Car not found.
    delete:
      summary: Delete car by ID
      description: Remove a car from the system by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The car ID.
      responses:
        '204':
          description: Car deleted successfully.
        '404':
          description: Car not found.

components:
  schemas:
    Car:
      type: object
      properties:
        id:
          type: string
          description: The car ID.
        carMake:
          type: string
          description: The make of the car.
        carModel:
          type: string
          description: The model of the car.
        color:
          type: string
          format: date
          description: The date the car was manufactured.
      required:
        - id
        - carMake
        - carModel
        - color

    CreateCarDto:
      type: object
      properties:
        carMake:
          type: string
          description: The make of the car.
        carModel:
          type: string
          description: The model of the car.
        color:
          type: string
          format: date
          description: The date the car was manufactured.
      required:
        - carMake
        - carModel
        - color
